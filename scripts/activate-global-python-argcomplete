#!/usr/bin/env python
# PYTHON_ARGCOMPLETE_OK
'''
Activate the generic bash-completion script for the argcomplete module.
'''

import os, sys, argparse, argcomplete, shutil
parser = argparse.ArgumentParser(description=__doc__,
                                 formatter_class=argparse.RawDescriptionHelpFormatter)

dest_opt = parser.add_argument("--dest", help="Specify the bash completion modules directory to install into", default="/etc/bash_completion.d")
parser.add_argument("--user", help="Install into user directory (~/.bash_completion.d/)", action='store_true')
argcomplete.autocomplete(parser)
args = parser.parse_args()

if args.user:
    args.dest = os.path.expanduser("~/.bash_completion.d/")

if not os.path.exists(args.dest) and args.dest != '-':
    parser.error("Path {d} does not exist".format(d=args.dest))

activator = os.path.join(os.path.dirname(argcomplete.__file__), 'bash_completion.d', 'python-argcomplete.sh')
setup_py  = os.path.join(os.path.dirname(argcomplete.__file__), 'bash_completion.d', 'python-setup-py.sh')

if args.dest == '-':
    print open(activator).read()
else:
    try :
        activator_dest = os.path.join(args.dest, "python-argcomplete.sh")
        print "Installing bash completion script", activator_dest
        shutil.copy(activator, activator_dest)
        setup_py_dest = os.path.join(args.dest, "python-setup-py.sh")
        print "Installing bash completion script", setup_py_dest
        shutil.copy(setup_py, setup_py_dest)
    except Exception as e:
        err = str(e)
        if args.dest == dest_opt.default:
            err += "\nPlease try --user to install into a user directory, or --dest to specify the bash completion modules directory"
        parser.error(err)
