#!/usr/bin/env python

# Copyright 2012-2013, Andrey Kislyuk and argcomplete contributors.
# Licensed under the Apache License. See https://github.com/kislyuk/argcomplete for more info.

'''
Check if an EASY-INSTALL-SCRIPT wrapper redirects to a script that contains "PYTHON_ARGCOMPLETE_OK"
'''
import os, sys, re, argparse, pkg_resources

parser = argparse.ArgumentParser(description=__doc__,
                                 formatter_class=argparse.RawDescriptionHelpFormatter)

parser.add_argument('--verbose', action='store_true')
parser.add_argument("wrapper_script", help="Wrapper script to examine")
args = parser.parse_args()

def printv(s, end='\n'):
    if args.verbose:
        sys.stdout.write(s)
        sys.stdout.write(end)

OK = "PYTHON_ARGCOMPLETE_OK"
        
with open(args.wrapper_script) as fh:
    line1, lines = fh.read(1024).split("\n", 1)[:2]
    assert(line1.startswith('#') and 'py' in line1)
    for line in lines.split("\n", 10):
        if line.startswith("# EASY-INSTALL-SCRIPT"):
            dist, script = re.match("# EASY-INSTALL-SCRIPT: '(.+)','(.+)'", line).groups()
            printv('opening scripts/' + script, end=' ')
            if OK in pkg_resources.get_distribution(dist).get_metadata('scripts/'+script):
                printv('\n   includes ' + OK)
                exit(0)
            else:
                printv('\n   found, but does not include ' + OK)
        elif line.startswith("# EASY-INSTALL-ENTRY-SCRIPT"):
            dist, group, name = re.match("# EASY-INSTALL-ENTRY-SCRIPT: '(.+)','(.+)','(.+)'", line).groups()
            import pkgutil
            module_name = pkg_resources.get_distribution(dist).get_entry_info(group, name).module_name
            filename = pkgutil.get_loader(module_name).filename
            if os.path.isdir(filename):
                filename = os.path.join(filename, '__init__.py')
            printv('opening ' + filename, end=' ')
            with open(filename) as mod_fh:
                if OK in mod_fh.read(1024):
                    printv('\n   includes ' + OK)
                    exit(0)
                else:
                    printv('\n   found, but does not include ' + OK)
            printv('not found\n')

exit(1)
